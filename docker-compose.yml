version: "3.8"

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_MODE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - banking-network
  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - banking-network

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    networks:
      - banking-network
    depends_on:
      - eureka-server

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - banking-network

  account-service:
    build:
      context: ./account-service
    container_name: account-service
    ports:
      - "8081:8081"
    networks:
      - banking-network
    depends_on:
      - config-server
      - eureka-server
      - postgres
    restart: always

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8082:8082"
    networks:
      - banking-network
    depends_on:
      - config-server
      - eureka-server
      - postgres
    restart: always

networks:
  banking-network:
    driver: bridge